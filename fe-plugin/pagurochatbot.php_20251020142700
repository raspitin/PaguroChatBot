<?php
/**
 * Plugin Name: PaguroChatBot
 * Plugin URI: https://www.villaceli.it/
 * Description: Un assistente virtuale per la verifica e la prenotazione di appartamenti con fallback LLM (Ollama).
 * Version: 1.0.0
 * Author: [Il Tuo Nome/Azienda]
 * Text Domain: pagurochatbot
 * Domain Path: /languages
 */

// Evita l'accesso diretto ai file
if ( ! defined( 'WPINC' ) ) {
    die;
}

// Costanti utili aggiornate con il nuovo path
define( 'PAGURO_VERSION', '1.0.0' );
// La costante PAGURO_PLUGIN_DIR punterà alla nuova directory: wp-content/plugins/pagurochatbot/
define( 'PAGURO_PLUGIN_DIR', plugin_dir_path( __FILE__ ) );
define( 'PAGURO_PLUGIN_URL', plugin_dir_url( __FILE__ ) );

/**
 * Funzione di attivazione.
 */
function activate_paguro_chat_bot() {
    // ... (Logica di attivazione) ...
}
register_activation_hook( __FILE__, 'activate_paguro_chat_bot' );

/**
 * La classe principale del plugin.
 */
class Paguro_Chat_Bot {
    // ... (Il resto della classe Paguro_Chat_Bot rimane invariato) ...
    // Le classi interne (Paguro_Admin, Paguro_API_Client) non hanno bisogno di essere rinominate
    // se le mantieni coerenti con l'uso di Paguro_ nel nome.
    // L'importante è che il nome della classe principale (Paguro_Chat_Bot) sia unico.
    
    protected static $instance = null;

    public static function get_instance() {
        if ( null === self::$instance ) {
            self::$instance = new self();
        }
        return self::$instance;
    }

    private function __construct() {
        $this->load_dependencies();
        $this->define_admin_hooks();
        $this->define_public_hooks();
    }

    private function load_dependencies() {
        // I percorsi dei file dipendenti (admin/class-paguro-admin.php) rimangono validi
        require_once PAGURO_PLUGIN_DIR . 'admin/class-paguro-admin.php';
        require_once PAGURO_PLUGIN_DIR . 'includes/class-paguro-api-client.php';
    }

    private function define_admin_hooks() {
        $paguro_admin = new Paguro_Admin();
        
        add_action( 'admin_menu', array( $paguro_admin, 'add_plugin_admin_menu' ) );
        add_action( 'admin_init', array( $paguro_admin, 'register_settings' ) );
        add_action( 'admin_enqueue_scripts', array( $paguro_admin, 'enqueue_styles_and_scripts' ) );
        add_action( 'wp_ajax_paguro_test_connection', array( $paguro_admin, 'test_backend_connection' ) );
    }

    private function define_public_hooks() {
        add_action( 'wp_enqueue_scripts', array( $this, 'enqueue_public_styles_and_scripts' ) );
        add_action( 'wp_footer', array( $this, 'render_chatbot_interface' ) );
        add_action( 'wp_ajax_paguro_chatbot_query', array( $this, 'handle_chatbot_query' ) );
        add_action( 'wp_ajax_nopriv_paguro_chatbot_query', array( $this, 'handle_chatbot_query' ) );
    }

    public function enqueue_public_styles_and_scripts() {
        // ... (Logica di enqueue) ...
    }

    public function render_chatbot_interface() {
        // ... (Markup HTML) ...
    }

    public function handle_chatbot_query() {
        // ... (Logica AJAX) ...
    }
    
    private function process_chatbot_query( $query ) {
        // ... (Logica di processamento) ...
    }
}

Paguro_Chat_Bot::get_instance();
