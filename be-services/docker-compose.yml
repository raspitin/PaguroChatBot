version: '3.8'
services:
  
  # Servizio 1: API Core (Logica di Prenotazione)
  paguro_api:
    build: 
      context: .
      dockerfile: Dockerfile_API 
    container_name: paguro_api_service
    # Mappa la porta interna 80 (dove gira l'API) sulla porta 5000 dell'host
    ports:
      - "5000:80" 
    environment:
      # Credenziali DB e Token di sicurezza (caricate dal file .env)
      - API_TOKEN=${PAGURO_API_TOKEN}
      - DB_HOST=paguro_db
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - OLLAMA_HOST=ollama:11434 # L'API parla con Ollama tramite la rete Docker
    depends_on:
      - paguro_db
      - ollama
    # Assicurati che l'API si riavvii in caso di crash
    restart: always

  # Servizio 2: Database (PostgreSQL raccomandato)
  paguro_db:
    image: postgres:14-alpine
    container_name: paguro_db_service
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data # Persistenza dei dati
    restart: always

  # Servizio 3: LLM (Ollama)
  ollama:
    image: ollama/ollama
    container_name: paguro_ollama_service
    # Il BE parla con Ollama tramite la rete Docker, non serve esporre porte esterne.
    volumes:
      - ollama_data:/root/.ollama
    # Importa il modello LLM che preferisci (es. llama2:7b) all'avvio
    command: serve
    restart: always

# Volumi per la persistenza dei dati
volumes:
  db_data:
  ollama_data:
